{"ast":null,"code":"import _classCallCheck from\"/Users/devonmartens/gitProjects/bootcamp/homework/ClickyGame/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/devonmartens/gitProjects/bootcamp/homework/ClickyGame/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/devonmartens/gitProjects/bootcamp/homework/ClickyGame/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/devonmartens/gitProjects/bootcamp/homework/ClickyGame/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/devonmartens/gitProjects/bootcamp/homework/ClickyGame/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Nav from\"./components/Nav\";import Header from\"./components/Header\";import Buttons from\"./components/Buttons\";import Card from\"./components/Card\";import Footer from\"./components/Footer\";import levels from\"./Levels.json\";import Simple from\"./character.json\";import Normal from\"./Character2.json\";import Challenge from\"./challenge.json\";// import secondList from \"./Character.json\";\nvar App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={levels:levels,characters:[],wasClicked:false,idArr:[],totalClicks:1,highScore:1};_this.restartGame=function(){_this.setState({idArr:[],totalClicks:1});console.log(_this.state.idArr);document.querySelector(\"#score\").textContent=0;};_this.difficulty=function(name){console.log(name);if(name===\"Simple\"){_this.setState({characters:Simple});document.querySelector(\".directions\").textContent=\"You are now in Nice and Easy Mode...12 Characters Loaded!\";}else if(name===\"Normal\"){_this.setState({characters:Normal});document.querySelector(\".directions\").textContent=\"You are now in Normal Mode...18 Characters Loaded!\";}else{_this.setState({characters:Challenge});document.querySelector(\".directions\").textContent=\"You are now in Challenge Mode...32 Characters Loaded!\";}};_this.shuffle=function(characters){var currentIndex=characters.length;var shuffleCharacters=characters;while(currentIndex!==0){//Get a random index\nvar randomIndex=Math.floor(Math.random()*currentIndex);currentIndex-=1;//Swap the values\nvar temporaryValue=shuffleCharacters[currentIndex];shuffleCharacters[currentIndex]=shuffleCharacters[randomIndex];shuffleCharacters[randomIndex]=temporaryValue;}_this.setState({characters:shuffleCharacters});};_this.clicked=function(id){console.log(\"1\",_this.state.totalClicks,_this.state.highScore);//adding up the total number of clicks\nif(_this.state.totalClicks>=_this.state.highScore){_this.setState({highScore:_this.state.totalClicks+1});document.querySelector(\"#top-score\").textContent=_this.state.highScore;}_this.setState({totalClicks:_this.state.totalClicks+1});document.querySelector(\"#score\").textContent=_this.state.totalClicks;document.querySelector(\".directions\").textContent=\"Good guess! But don't click me again!\";console.log(\"2\",_this.state.totalClicks,_this.state.highScore);if(_this.state.totalClicks===_this.state.characters.length){document.querySelector(\".directions\").textContent=\"Congratulations! You won!\";_this.restartGame();}//shuffle the cards\n_this.state.idArr.map(function(checkArr){if(checkArr===id){document.querySelector(\".directions\").textContent=\"Oh no! You clicked me already! Click to try again!\";if(_this.state.totalClicks>=_this.state.highScore){document.querySelector(\"#top-score\").textContent=_this.state.highScore-1;_this.setState({highScore:_this.state.highScore-1});}console.log(\"3\",_this.state.totalClicks,_this.state.highScore);_this.restartGame();}var characters=_this.state.characters;return characters;});_this.shuffle(_this.state.characters);console.log(\"4\",_this.state.totalClicks,_this.state.highScore);_this.state.idArr.push(id);};return _this;}_createClass(App,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",null,React.createElement(Nav,null),React.createElement(Header,null),React.createElement(\"div\",{className:\"levels\"},this.state.levels.map(function(level){return React.createElement(Buttons,{id:level.id,name:level.name,characterImage:level.characterImage,difficulty:_this2.difficulty});})),React.createElement(\"div\",{className:\"game-container\"},this.state.characters.map(function(character){return React.createElement(Card,{id:character.id,key:character.id,characterName:character.characterName,characterImage:character.characterImage,clicked:_this2.clicked});})),React.createElement(Footer,null));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/devonmartens/gitProjects/bootcamp/homework/ClickyGame/src/App.js"],"names":["React","Component","Nav","Header","Buttons","Card","Footer","levels","Simple","Normal","Challenge","App","state","characters","wasClicked","idArr","totalClicks","highScore","restartGame","setState","console","log","document","querySelector","textContent","difficulty","name","shuffle","currentIndex","length","shuffleCharacters","randomIndex","Math","floor","random","temporaryValue","clicked","id","map","checkArr","push","level","characterImage","character","characterName"],"mappings":"ytBACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,GAAP,KAAgB,kBAAhB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,kBAAtB,CACA;GAGMC,CAAAA,G,mXACJC,K,CAAQ,CACNL,MAAM,CAANA,MADM,CAENM,UAAU,CAAE,EAFN,CAGNC,UAAU,CAAE,KAHN,CAINC,KAAK,CAAE,EAJD,CAKNC,WAAW,CAAE,CALP,CAMNC,SAAS,CAAE,CANL,C,OASRC,W,CAAc,UAAM,CAClB,MAAKC,QAAL,CAAc,CACZJ,KAAK,CAAE,EADK,CAEZC,WAAW,CAAE,CAFD,CAAd,EAIAI,OAAO,CAACC,GAAR,CAAY,MAAKT,KAAL,CAAWG,KAAvB,EACAO,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCC,WAAjC,CAA+C,CAA/C,CACD,C,OAEDC,U,CAAa,SAACC,IAAD,CAAU,CACrBN,OAAO,CAACC,GAAR,CAAYK,IAAZ,EACA,GAAIA,IAAI,GAAK,QAAb,CAAuB,CACrB,MAAKP,QAAL,CAAc,CACZN,UAAU,CAAEL,MADA,CAAd,EAGAc,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,WAAtC,6DACD,CALD,IAKO,IAAIE,IAAI,GAAK,QAAb,CAAuB,CAC5B,MAAKP,QAAL,CAAc,CACZN,UAAU,CAAEJ,MADA,CAAd,EAGAa,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,WAAtC,sDACD,CALM,IAKA,CACL,MAAKL,QAAL,CAAc,CACZN,UAAU,CAAEH,SADA,CAAd,EAGAY,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,WAAtC,yDACC,CACJ,C,OAEDG,O,CAAU,SAACd,UAAD,CAAgB,CACxB,GAAIe,CAAAA,YAAY,CAAGf,UAAU,CAACgB,MAA9B,CAEA,GAAIC,CAAAA,iBAAiB,CAAGjB,UAAxB,CACA,MAAOe,YAAY,GAAK,CAAxB,CAA2B,CACzB;AACA,GAAIG,CAAAA,WAAW,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBN,YAA3B,CAAlB,CACAA,YAAY,EAAI,CAAhB,CAEA;AACA,GAAIO,CAAAA,cAAc,CAAGL,iBAAiB,CAACF,YAAD,CAAtC,CACAE,iBAAiB,CAACF,YAAD,CAAjB,CAAkCE,iBAAiB,CAACC,WAAD,CAAnD,CACAD,iBAAiB,CAACC,WAAD,CAAjB,CAAiCI,cAAjC,CACD,CACD,MAAKhB,QAAL,CAAc,CAAEN,UAAU,CAAEiB,iBAAd,CAAd,EACD,C,OAEDM,O,CAAU,SAACC,EAAD,CAAQ,CAChBjB,OAAO,CAACC,GAAR,CAAY,GAAZ,CAAiB,MAAKT,KAAL,CAAWI,WAA5B,CAAyC,MAAKJ,KAAL,CAAWK,SAApD,EACA;AACA,GAAI,MAAKL,KAAL,CAAWI,WAAX,EAA0B,MAAKJ,KAAL,CAAWK,SAAzC,CAAoD,CAClD,MAAKE,QAAL,CAAc,CACZF,SAAS,CAAE,MAAKL,KAAL,CAAWI,WAAX,CAAyB,CADxB,CAAd,EAGAM,QAAQ,CAACC,aAAT,CAAuB,YAAvB,EAAqCC,WAArC,CAAmD,MAAKZ,KAAL,CAAWK,SAA9D,CACD,CACD,MAAKE,QAAL,CAAc,CAAEH,WAAW,CAAE,MAAKJ,KAAL,CAAWI,WAAX,CAAyB,CAAxC,CAAd,EACAM,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCC,WAAjC,CAA+C,MAAKZ,KAAL,CAAWI,WAA1D,CACAM,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,WAAtC,yCACAJ,OAAO,CAACC,GAAR,CAAY,GAAZ,CAAiB,MAAKT,KAAL,CAAWI,WAA5B,CAAyC,MAAKJ,KAAL,CAAWK,SAApD,EACA,GAAI,MAAKL,KAAL,CAAWI,WAAX,GAA2B,MAAKJ,KAAL,CAAWC,UAAX,CAAsBgB,MAArD,CAA6D,CAC3DP,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,WAAtC,6BACA,MAAKN,WAAL,GACD,CACD;AACA,MAAKN,KAAL,CAAWG,KAAX,CAAiBuB,GAAjB,CAAqB,SAAAC,QAAQ,CAAI,CAC/B,GAAIA,QAAQ,GAAKF,EAAjB,CAAqB,CACnBf,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,WAAtC,sDACA,GAAI,MAAKZ,KAAL,CAAWI,WAAX,EAA2B,MAAKJ,KAAL,CAAWK,SAA1C,CAAsD,CACpDK,QAAQ,CAACC,aAAT,CAAuB,YAAvB,EAAqCC,WAArC,CAAmD,MAAKZ,KAAL,CAAWK,SAAX,CAAuB,CAA1E,CACA,MAAKE,QAAL,CAAc,CACZF,SAAS,CAAE,MAAKL,KAAL,CAAWK,SAAX,CAAuB,CADtB,CAAd,EAGD,CACDG,OAAO,CAACC,GAAR,CAAY,GAAZ,CAAiB,MAAKT,KAAL,CAAWI,WAA5B,CAAyC,MAAKJ,KAAL,CAAWK,SAApD,EACA,MAAKC,WAAL,GACD,CACD,GAAML,CAAAA,UAAU,CAAG,MAAKD,KAAL,CAAWC,UAA9B,CAEA,MAAOA,CAAAA,UAAP,CACD,CAfD,EAgBA,MAAKc,OAAL,CAAa,MAAKf,KAAL,CAAWC,UAAxB,EACAO,OAAO,CAACC,GAAR,CAAY,GAAZ,CAAiB,MAAKT,KAAL,CAAWI,WAA5B,CAAyC,MAAKJ,KAAL,CAAWK,SAApD,EACA,MAAKL,KAAL,CAAWG,KAAX,CAAiByB,IAAjB,CAAsBH,EAAtB,EACD,C,sEAEQ,iBACP,MACE,gCACE,oBAAC,GAAD,MADF,CAEE,oBAAC,MAAD,MAFF,CAGE,2BAAK,SAAS,CAAC,QAAf,EACC,KAAKzB,KAAL,CAAWL,MAAX,CAAkB+B,GAAlB,CAAsB,SAAAG,KAAK,CAAI,CAC9B,MACE,qBAAC,OAAD,EACE,EAAE,CAAEA,KAAK,CAACJ,EADZ,CAEE,IAAI,CAAEI,KAAK,CAACf,IAFd,CAGE,cAAc,CAAEe,KAAK,CAACC,cAHxB,CAIE,UAAU,CAAE,MAAI,CAACjB,UAJnB,EADF,CAQD,CATA,CADD,CAHF,CAeE,2BAAK,SAAS,CAAC,gBAAf,EACG,KAAKb,KAAL,CAAWC,UAAX,CAAsByB,GAAtB,CAA0B,SAAAK,SAAS,CAAI,CACtC,MACE,qBAAC,IAAD,EACE,EAAE,CAAEA,SAAS,CAACN,EADhB,CAEE,GAAG,CAAEM,SAAS,CAACN,EAFjB,CAGE,aAAa,CAAEM,SAAS,CAACC,aAH3B,CAIE,cAAc,CAAED,SAAS,CAACD,cAJ5B,CAKE,OAAO,CAAE,MAAI,CAACN,OALhB,EADF,CASD,CAVA,CADH,CAfF,CA4BE,oBAAC,MAAD,MA5BF,CADF,CAgCD,C,iBAhIenC,S,EAmIlB,cAAeU,CAAAA,GAAf","sourcesContent":["\nimport React, { Component } from \"react\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport Buttons from \"./components/Buttons\"\nimport Card from \"./components/Card\";\nimport Footer from \"./components/Footer\";\n\nimport levels from \"./Levels.json\"\nimport Simple from \"./character.json\";\nimport Normal from \"./Character2.json\";\nimport Challenge from \"./challenge.json\";\n// import secondList from \"./Character.json\";\n\n\nclass App extends Component {\n  state = {\n    levels,\n    characters: [],\n    wasClicked: false,\n    idArr: [],\n    totalClicks: 1,\n    highScore: 1\n  }\n\n  restartGame = () => {\n    this.setState({\n      idArr: [],\n      totalClicks: 1,\n    })\n    console.log(this.state.idArr)\n    document.querySelector(\"#score\").textContent = 0\n  }\n\n  difficulty = (name) => {\n    console.log(name)\n    if (name === \"Simple\") {\n      this.setState({\n        characters: Simple\n      })\n      document.querySelector(\".directions\").textContent = `You are now in Nice and Easy Mode...12 Characters Loaded!`\n    } else if (name === \"Normal\") {\n      this.setState({\n        characters: Normal\n      }) \n      document.querySelector(\".directions\").textContent = `You are now in Normal Mode...18 Characters Loaded!`\n    } else {\n      this.setState({\n        characters: Challenge\n      }) \n      document.querySelector(\".directions\").textContent = `You are now in Challenge Mode...32 Characters Loaded!`\n      }\n  }\n\n  shuffle = (characters) => {\n    let currentIndex = characters.length;\n\n    let shuffleCharacters = characters;\n    while (currentIndex !== 0) {\n      //Get a random index\n      let randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      //Swap the values\n      let temporaryValue = shuffleCharacters[currentIndex];\n      shuffleCharacters[currentIndex] = shuffleCharacters[randomIndex];\n      shuffleCharacters[randomIndex] = temporaryValue;\n    }\n    this.setState({ characters: shuffleCharacters })\n  }\n\n  clicked = (id) => {\n    console.log(\"1\", this.state.totalClicks, this.state.highScore)\n    //adding up the total number of clicks\n    if (this.state.totalClicks >= this.state.highScore) {\n      this.setState({\n        highScore: this.state.totalClicks + 1\n      })\n      document.querySelector(\"#top-score\").textContent = this.state.highScore\n    }\n    this.setState({ totalClicks: this.state.totalClicks + 1 });\n    document.querySelector(\"#score\").textContent = this.state.totalClicks\n    document.querySelector(\".directions\").textContent = `Good guess! But don't click me again!`\n    console.log(\"2\", this.state.totalClicks, this.state.highScore)\n    if (this.state.totalClicks === this.state.characters.length) {\n      document.querySelector(\".directions\").textContent = `Congratulations! You won!`\n      this.restartGame()\n    }\n    //shuffle the cards\n    this.state.idArr.map(checkArr => {\n      if (checkArr === id) {\n        document.querySelector(\".directions\").textContent = `Oh no! You clicked me already! Click to try again!`\n        if (this.state.totalClicks >= (this.state.highScore)) {\n          document.querySelector(\"#top-score\").textContent = this.state.highScore - 1\n          this.setState({\n            highScore: this.state.highScore - 1\n          })\n        }\n        console.log(\"3\", this.state.totalClicks, this.state.highScore)\n        this.restartGame()\n      }\n      const characters = this.state.characters;\n\n      return characters\n    })\n    this.shuffle(this.state.characters);\n    console.log(\"4\", this.state.totalClicks, this.state.highScore)\n    this.state.idArr.push(id)\n  }\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <Header />\n        <div className=\"levels\">\n        {this.state.levels.map(level => {\n          return (\n            <Buttons\n              id={level.id}\n              name={level.name}\n              characterImage={level.characterImage}\n              difficulty={this.difficulty}\n            />\n          )\n        })}\n        </div>\n        <div className=\"game-container\">\n          {this.state.characters.map(character => {\n            return (\n              <Card\n                id={character.id}\n                key={character.id}\n                characterName={character.characterName}\n                characterImage={character.characterImage}\n                clicked={this.clicked}\n              />\n            )\n          })}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}